Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label=T)
wday(this_day, label=TRUE)
this_moment <-now()
this_moment
second(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("--192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 17, minutes = 44, seconds = 55)
this_moment
?now
nyc <- now("America/New_York")
nyc
depart <- nyc+days(2)
depart
depart <- update(depart,hours=17,minutes=34)
depart
arrive <- depart+ hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive,"Asia/Hong_Kong")
arrive
last_time<-mdy("June 17, 2008",tz="Singapore")
last_time
?new_interval
how_long <- new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
q()
x<- rnorm(100)
hist(x)
y<- rnorm(100)
plot(x,y)
plot(x,y,pch=3)
example(points)
plot(x,y,pch=3)
y<- rnorm(100)
x<- rnorm(100)
plot(x,y,pch=3)
title("Scatterplot")
text(-2,-2,"label")
fit <- lm(x~y)
abline(fit)
z <- rpois(100,2)
par(mfrow=c(2,1))
plot(x,y,pch=5)
plot(x,z,pch=2)
par("mar")
par(mar = c(2,2,1,1))
plot(x,y,pch=5)
plot(x,z,pch=2)
par(mfrow=c(1,1))
y<- x+ rnorm(100)
g<- gl(2,50, labels = c("males", "females"))
str(g)
plot(x,y)
plot(x,y, type="n")
points(x[g=="males"], y[g=="males"], col = "green")
points(x[g=="females"], y[g=="females"], col = "blue")
swirl()
library(swil)
library(swirl)
swirl()
?Devices
?R
??R
kej
plot(eruptions, waiting)
faithful
with(faithfull, plot(eruptions,waiting))
with(faithful, plot(eruptions,waiting))
title(main="Old Faithful Geyser Data")
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dec.cur()
dev.cur()
with(faithful, plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.copy(png, "geyserplot.png")
dev.copy(png, file="geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist))
text( mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data=state, layout=c(4,1))
xyplot(Life.Exp ~ Income | region, data=state, layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data=mpg)
head(airquality)
range(airquality$Ozone, na.rm=TRUE)
hist(airquality$Ozone)
dev.cur()
dev.off()
dev.cur()
dev.dir()
??dev
if(dev.cur() == 1) dev.new()
dev.cur()
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone(ppb)")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone(ppb)"), col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone(ppb)", col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)", col.axis="blue", col.lab="red")
title(main="Ozone and Wind in New York City")
with(airquality, plot(Wind,Ozone))
title(main="Ozone and Wind in New York City")
length(par)
length(par())
names(par())
par()$pin
par()$fg
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type="n")
title(main="Wind and Ozone in NYC")
may<-subset(airqaulity, airquality$month=5)
may<-subset(airqaulity, airquality$month==5)
may<-subset(airquality, airquality$month==5)
may<-subset(airquality, month==5)
may<-subset(airquality, Month==5)
points(wind,ozone, pch=3, col="blue")
points(may$wind,may$ozone, pch=3, col="blue")
points(may$wind,may$ozone, pch=17, col="blue")
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality, Month !=5)
points(notmay$Wind,notmay$Ozone,col="red",pch=14)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright", pch=c(17,8), col=c("blue","red"), lengend=c("May","Other Months"))
legend("topright", pch=c(17,8), col=c("blue","red"), legend=c("May","Other Months"))
abline(v=median(airquality$Wind), lty=2, lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Wind, airquality$Solar.R, main="Ozone and Solar Radiation")
par(mfrow = c(1,
| 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Wind, airquality$Solar.R, main="Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer=TRUE)
quit
quit()
install.packages("RColorBrewer")
library("RColorBrewer")
?rcolorbrewer
??rcolourbrewer
library("swirl")
swirl(0)
head(airquality)
xyplot(Ozone ~ Wind, data=airquality)
xyplot(Ozone ~ Wind, data=airquality, col="red", pch=8, main="Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month), data=airquality, col="red", pch=8, main="Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month), data=airquality, layout=c(5,1))
xyplot(Ozone ~ Wind | Month, data=airquality, layout=c(5,1))
p <- xyplot(Ozone~Wind, data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot( y~x | f, layout=c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"), local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color,diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local=TRUE)
xyplots( proce~carat | color*cut , data=diamonds, strip=FALSE, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
xyplot( proce~carat | color*cut , data=diamonds, strip=FALSE, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
xyplot( price~carat | color*cut , data=diamonds, strip=FALSE, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
xyplot( price~carat | color*cut , data=diamonds, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
sample(colors(),10)
pal <- colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p3 <- colorRampPalette( c("blue","green"), alpha=.5)
p3(5)
plot(x,y, pch=19, col=rgb(0,.5,.5))
plot(x,y, pch=19, col=rgb(0,.5,.5,.3))
cols <- brewer.pal(2,"BuGn")
cols <- brewer.pal(3,"BuGn")
showme(cols)
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano, col=pal(20))
image(volcano, col=p1(20))
0
quit()
library("swirl")
swirl()
str(mpg)
plot(displ,hwy, data=mpg)
plot(displ ,hwy, data=mpg)
plot(displ ,hwy, data=mpg)
plot(displ ,hwy, data= mpg)
mpg
qplot(displ ,hwy, data=mpg)
qplot(displ ,hwy, data=mpg, col=drv)
qplot(displ ,hwy, data=mpg, color=drv)
qplot(displ ,hwy, data=mpg, color=drv, geom=c("point","smooth"))
qplot(y=hwy, data=mpg, color=drv)
myhigh
qplot(drv, hwy, data=mpg, geom="boxplot")
qplot(drv, hwy, data=mpg, geom="boxplot", color=manufacturer)
qplot( hwy, data=mpg, fill=drv)
qplot( displ, hwy, data=mpg, facets= .~drv)
qplot( hwy, data=mpg, facets= drv~. , binwidth=2 )
library(swirl)
swirl()
qplot( displ, hwy, data = mpg, geom = c("point","smooth"), facets = .~drv, method = "loess")
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g + geom_point()
g + geom_smooth()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(method="lm")
g + geom_point() + geom_smooth(method="lm") + facet_grid(.~drv)
g + geom_point() + geom_smooth(method="lm") + facet_grid(.~drv) + ggtitle("Swirl Rules!")
g + geom_point(color="pink", size=4, alpha=0.5)
g + geom_point(size=4, alpha=0.5, aes(color=drv))
g + geom_point(aes(color=drv))+ labs(title="Swirl Rules!")
g + geom_point(aes(color=drv))+ labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point( aes(color = drv, size = 2, alpha = 0.5)) + geom_smooth( size=4, linetype=3, method="lm", se=FALSE)
g + geom_point( aes(color = drv), size = 2, alpha = 0.5) + geom_smooth( size=4, linetype=3, method="lm", se=FALSE)
g + geom_point( aes(color=drv)) + theme_bw(base_family = "Times")
plot(myx,myy, type="l", ylim=c(-3,3))
g <- ggplot(testdata, aes(x=myx,y=myy))
g <- ggplot(testdat, aes(x=myx,y=myy))
g + geom_line()
g + geom_line() +ylim
g + geom_line(aes(ylim(-3,3)))
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim = c(-3,3))
g <- ggplot(dataset, aes(x=displ, y=hwy, color=factor(year)))
g <- ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv~cyl, margins=TRUE)
g + geom_point() + facet_grid(drv~cyl, margins=TRUE) + geom_smooth(method="lm", se=FALSE, size=2, color="black")
g + geom_point() + facet_grid(drv~cyl, margins=TRUE) + geom_smooth(method="lm", se=FALSE, size=2, color="black") + labs(x="Displacement", y="Highway Mileage", title="Swirl Rules!")
str(diamond)
str(diamonds)
qplot(price, data=diamonds)
diamonds$price
range(diamonds$price)
qplot(price, data=diamonds, binwdith=18497/30)
qplot(price, data=diamonds, binwidth=18497/30)
brk
counts
qplot(price, data=diamonds, binwidth=18497/30, fill=cut)
qplot(price, data=diamonds, geom="density")
qplot(price, data=diamonds, geom="density", color=cut)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds,shape=cut)
qplot(carat,price,data=diamonds,color=cut)
qplot(carat,price,data=diamonds,color=cut, geom=c("point","smooth"), method="lm")
qplot(carat,price,data=diamonds,color=cut, geom=c("point","smooth"), method="lm", facets = .~cut)
g <- ggplot(diamonds, aes(depth,price))
sumamry(g)
summary(g)
g+geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1,length=4), na.rm=TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth,price))
g + geom_point(alpha=1/3) + facet_grid(cut~car2)
diamonds[myd,]
g + geom_point(alpha=1/3) + facet_grid(cut~car2) + geom_smooth(method="lm", size=3, color="pink")
ggplot(diamonds, aes(carat,price)) + geom_boxplot() + facet_grid(.~cut)
quit()
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=4, col="blue")
abline(h=.4, col="blue")
abline(h=.4, col="red")
5
5
12
abline(h=.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix, cm.colors(25))
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy, col=c("red","orange","purple"), pch=3, cex=2, lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean())
tapply(x,newClust,mean
)
tapply(y,newClust,mean)
points(newCx,newCy, col=cols1, pch=8, cex=2, lwd-2)
points(newCx,newCy, col=cols1, pch=8, cex=2, lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2, mean)
tapply(y,newClust2, mean)
points(finalCx,finalCy,col=cols1, pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers=3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers, col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% matv
matu * diag * matv
matu * diag * t(matv)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[,1:2]
svd2$d
dim(faceData)
egfdgf
svds
(svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a1 <- (svd1$u[,1:2] * svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
quit()
library(swirl)
swirl()
dim(ssd)
names(ssd[562,563])
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject==1)
dim(sub1)
names(sub1[1:12])
myedit("showXY.r")
myedit("showXY.R")
showme(1:6)
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, unclass(sub1$activity))
myplclust(hclustering, lab.col unclass(sub1$activity))
myplclust(hclustering, lab.col =unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd$v[,2])
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
mplclust(hclustering, lab.col=unclass(sub1$activity))
myplclust(hclustering, lab.col=unclass(sub1$activity))
names(sub1[maxcCon])
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562:563)], centers=6)
table(kClust$cluster,sub1$activity)
table(kClust$cluster,sub1$activity, nstart=100)
kClust <- kmeans(sub1[,-c(562:563)], centers=6, nstart=100)
table(kClust$cluster,sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch=19, ylab="Laying Cluster")
names(sub1[1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12],pch=19, ylab="Walkdown Cluster")
dims(pm0)
dim(pm0)
source('~/.active-rstudio-document', echo=TRUE)
getwd()
setwd("C:\\Users\\PRS\\github\\rep research\\RepData_PeerAssessment1")
source('~/.active-rstudio-document', echo=TRUE)
View(averagebyint)
averagebyint <- summarise(databyint,mean(steps, na.rm=T))
View(averagebyint)
plot(averagebyint, type="l", main = "Daily activity pattern", xlab="Interval", ylab="Average steps")
?max
?which.max
maxint <- which.max(averagebyint)
View(averagebyint)
maxint <- which.max(averagebyint[,2])
maxint <- which.max(averagebyint$mean)
View(data)
averagebyint[maxint,1]
maxintind <- which.max(averagebyint$mean)
maxint <- averagebyint[maxint,1]
?complete.cases
numna <- sum(!complete.cases(data))
View(stepsperday)
?n.rows
?nrows
??nrows
pcna <- (numna/nrow(data))*100
pcna <- round((numna/nrow(data))*100 )
summarise(databyint,sum(is.na(steps)))
nanobyint <- summarise(databyint,sum(is.na(steps)))
View(nanobyint)
databyint[[3]]
View(databyint)
totbyint <- summarise(databyint,sum(!is.na(steps)))
View(totbyint)
53/8
nabyday <- sumamrise(databydate,sum(is.na(steps)))
nabyday <- summarise(databydate,sum(is.na(steps)))
View(nabyday)
?weekday
??weekday
nabyday$weekday <- weekdays(nabyday$date)
View(nabyday)
nabydate[sum!=0]
nabyday[sum!=0]
nabyday[nabyday$sum!=0]
nabyday[nabyday$sum(is.na(steps))!=0]
?names
names(nabyday) <- c("date","missing","weekday")
View(nabyday)
nabyday[nabyday$missing!=0]
nabyday[nabyday$missing=0]
nabyday[nabyday$missing=!0]
nabyday[nabyday$missing != 0]
temp <- nabyday[nabyday$missing != 0]
View(temp)
temp <- nabyday[nabyday$missing != 0,]
View(temp)
View(averagebyint)
data[,data$steps==NA]
data[data$steps==NA,]
data[data$steps==NA]
test<-data$steps==NA
View(test)
test<-(data$steps=NA)
test<-(data$steps=="NA")
test<-[data$steps=="NA"]
test<-data$steps=="NA"
test
test<-is.na(data$steps)
datacomp <- data
